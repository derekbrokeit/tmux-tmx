# start new session
#new-session
# tmux set {{{1
# keep track of terminal
setenv ORIGTERM $TERM

# set the title variables
set -g set-titles on
set -g set-titles-string '#T'

# make sure that tmux keeps windows well sized up overall
setw -g aggressive-resize on

# set default screen to 256 colors
set -g default-terminal "screen-256color"

# turn on utf8
setw -g utf8 on
set -g status-utf8 on

# change the color of panes
set -g pane-active-border-fg green
set -g pane-border-fg colour236

# turn on titles
set -g set-titles on



# set mouse select on (does not seem to work in 1.4)
setw -g mode-mouse off
setw -g monitor-activity on
set -g mouse-select-pane on

# Misc.
set -g default-terminal "screen-256color"
set -g history-limit 1000

# automatically reshuffle after closing a window
set -g renumber-windows on

# compensate for slow escape character in tmux
set -g escape-time 50

# set the path to the home directory
#set-option default-path "$HOME" 
# tmux setw {{{1
# Highlight active window
set-window-option -g window-status-current-fg colour214
set-window-option -g window-status-format ' #[fg=colour8]#I#[fg=colour12]:#[default]#W#[fg=grey,dim]#F '
set-window-option -g window-status-current-format '[#I:#W#F]'

# when a bell goes off in a window, how will it be displayed
setw -g window-status-bell-attr default
setw -g window-status-bell-fg red

setw -g window-status-activity-attr default
setw -g window-status-activity-fg green

setw -g window-status-content-attr default
setw -g window-status-content-fg yellow

# add vim-like functionality 
setw -g mode-keys vi

# Notifying if other windows has activities
setw -g monitor-activity on
set -g visual-activity on

# Clock settings
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24

# turn on utf8
set-window-option -g utf8 on

## key-binding {{{1
# Make it use C-a, similar to screen..
unbind C-b
set -g prefix C-a
bind-key a send-prefix

unbind l
#bind-key C-a next-window
bind C-a send-prefix
 
# Reload key
bind r source-file ${HOME}/.tmux.conf \; \
                   display-message "source-file done"

# run shell script in the background
bind S command-prompt "run-shell '%%'"


# detach ^D d
unbind ^D
bind ^D detach

# binding split-window
# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind b split-window -v 'tssh-select'
unbind '"'
bind - split-window -v
bind v split-window -h 'tssh-select'
bind C-w new-window 'tssh-select'

#bind c set-option default-path "$PWD" \; neww

# bindings for resizing panes
bind-key -r  k resize-pane -U 5
bind-key -r  j resize-pane -D 5
bind-key -r  h resize-pane -L 5
bind-key -r  l resize-pane -R 5

# kill the pane
bind-key -r  X kill-pane

# bindings for vi-movements arround panes
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

#-----------
# Set status bar
set -g status on
set -g status-bg colour235
set -g status-interval 15
set -g status-fg white

set -g status-justify right
set -g status-position top

set -g status-interval 2
set -g status-utf8 on
set -g status-left-length 150
set -g status-right-length 150

# setup standard status-line or tmux-powerline if available
#source ~/.tmux.conf.standard
# status bar settings for linux computers
set -g status-left "#[fg=green]#T ] #(vcs_printer --tmux)#[default]["
set -g status-right "] #(statusline) #[fg=colour12][ %Y-%m-%d (#(dayofweek)) %R #[default]"

#if-shell '[ -f ~/.rcbundles/tmux-powerline/powerline.sh ]' 'source ~/.tmux.conf.tmux-powerline'

# powerline
#source "$HOME/.tmux.conf.tmux-powerline"
if-shell 'test -z "$POWERLINE_CONFIG_COMMAND"' 'set-environment -g POWERLINE_CONFIG_COMMAND powerline-config'

# Don’t version-check for this core functionality -- anything too old to
# support these options likely won’t work well with powerline
run-shell "powerline-daemon -q"
set -g status on
set -g status-utf8 on
set -g status-interval 2
set -g status-left-length 20
#set -g status-right 'blah#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)hello'
set -g status-right '#(/usr/bin/powerline tmux right)'
set -g status-right-length 150
set -g window-status-format "#[fg=colour244,bg=colour234]  #I #[fg=colour240] #[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"

# Legacy status-left definition to be overwritten for tmux Versions 1.8+
set -g status-left '#[fg=colour16,bg=colour254,nobold] #S #[fg=colour254,bg=colour234,nobold]#(eval $POWERLINE_COMMAND tmux left)'

# Simplify tmux version checking by using multiple config files. Source these
# config files based on the version in which tmux features were added and/or
# deprecated. By splitting these configuration options into separate files,
#run-shell 'eval $POWERLINE_CONFIG_COMMAND tmux source'
source "$HOME/repo/powerline/powerline/bindings/tmux/powerline.conf"
# vim: ft=tmux

# fixing tmux-pasteboard
# if-shell "reattach-to-user-namespace pbpaste" "set-option -g default-command 'reattach-to-user-namespace -l zsh'"
# if-shell "reattach-to-user-namespace pbpaste" "bind-key Y run-shell 'tmux save-buffer - | reattach-to-user-namespace pbcopy'"
